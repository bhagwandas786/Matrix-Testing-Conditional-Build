name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      skip-build:
        description: 'Skip build step'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'
  schedule:
    - cron: '0 2 * * *'  # Nightly at 2 AM

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with Jest
      run: |
        mkdir -p test-results/${{ matrix.node-version }}
        npx jest --runInBand --json --outputFile=test-results/${{ matrix.node-version }}/results.json
      env:
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }}
        path: test-results/${{ matrix.node-version }}
        retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: all-test-results
        pattern: test-results-*
        merge-multiple: true

    - name: Generate combined test results
      run: |
        mkdir -p test-summary
        # Combine all JSON files into a single array
        jq -s 'flatten' all-test-results/*/results.json > test-summary/combined-results.json
        echo "✅ Combined test results saved."

    - name: Upload combined summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary/combined-results.json

  regression-check:
    name: Check Regression in Test Count
    runs-on: ubuntu-latest
    needs: test-summary
    steps:
      - name: Download combined summary
        uses: actions/download-artifact@v4
        with:
          name: test-summary
          path: test-summary

      - name: Validate test count
        run: |
          CURRENT_COUNT=$(jq 'length' test-summary/combined-results.json)
          echo "Current test count: $CURRENT_COUNT"
          
          MIN_COUNT=5  # Minimum test count expected
          if [ "$CURRENT_COUNT" -lt "$MIN_COUNT" ]; then
            echo "❌ Regression detected: Test count ($CURRENT_COUNT) is below minimum ($MIN_COUNT)"
            exit 1
          else
            echo "✅ Test count meets minimum requirement: $CURRENT_COUNT >= $MIN_COUNT"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, test-summary, regression-check]
    if: |
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) &&
      github.event.inputs.skip-build == 'false'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: List build contents
      run: ls -la dist/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 30

  approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && needs.build.result == 'success'
    
    steps:
    - name: Wait for manual approval
      run: |
        echo "Manual approval required before publishing"
        echo "Simulation: Approval granted"
        sleep 5

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: approval
    if: github.ref == 'refs/heads/main' && needs.approval.result == 'success'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Display build contents
      run: ls -la dist/

    - name: Simulate publishing
      run: |
        echo "Publishing application"
        echo "Build contents:"
        if [ -f dist/build-info.txt ]; then cat dist/build-info.txt; fi
        echo "✅ Publishing completed successfully!"
